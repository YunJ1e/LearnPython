"""
Euler Project
Started: 2020/07/18
Updated: 2020/07/21
Author: Yunjie Wang
"""

"""
Problem 8 (23514624000)
"""

a = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858" \
    "6156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489" \
    "5044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904" \
    "91560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122" \
    "02354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290" \
    "86256932197846862248283972241375657056057490261407972968652414535100474821663704844031998900088952434506585" \
    "412275886668811642717147992444292823086346567481391912316282458617866458359124566529476545682848912883142607" \
    "690042242190226710556263211111093705442175069416589604080719840385096245544436298123098787992724428490918884" \
    "580156166097919133875499200524063689912560717606058861164671094050775410022569831552000559357297257163626956" \
    "1882670428252483600823257530420752963450"


def fill_window(window_list, number):
	window_size = 13
	if len(window_list) < window_size:
		window_list.append(number)
	else:
		window_list.pop(0)
		window_list.append(number)

def product_of_list(alist):
	res = 1
	for i in range(len(alist)):
		res *= alist[i]
	return res

def adjacent_product(number):
	# Assume the number input is string right now for simplicity
	numberList = list(number)
	windowList = []
	result = 0
	for num in numberList:
		fill_window(windowList, int(num))
		newProd = product_of_list(windowList)
		if newProd > result:
			result = newProd
	print(result)

adjacent_product(a)
# print(product_of_list([1,2,3]))